Hyperparameters
---------------

CoCoNet's parameters were set in order to put an emphasis on bin homogeneity. However, depending on the research goal, the user might want to emphasize on either one. Mainly, three parameters can be adjusted to improve bin completeness at the cost of possibly decreased homogeneity:

1. The fragment length, `-fl`
2. The minimum prevalence `--min-prevalence` (i.e. the number of samples a given contig appear in)
3. The minimum number matches between two contigs connected by an edge in the contig-contig graph (:math:`\theta`), `--theta`
4. The minimum edge density required for a cluster to be considered as a coherent bin (:math:`\gamma`), `--gamma2`

Decreasing the values of :math:`\theta` or :math:`\gamma`  (respectively 80\% and 75\% by default) decreases the binning stringency. This can, therefore, improve the completeness of viruses with higher variance in their k-mer or coverage patterns, albeit at the cost of possibly decreased homogeneity. Similarly, increasing the fragment length can minimize the variance in the k-mer and coverage distributions between contigs of the same species and, consequently, improve completeness. Nevertheless, a longer fragment length (or greater prevalence) thresholds can result in more contigs being assigned to singleton bins simply because they were not long enough to be processed. In addition, increasing the minimum prevalence will results in selecting contigs that are more broadly present across samples. Intuitively, a high prevalence provides a more robust information for binning; indeed, two contigs co-occurring in two samples provide a less robust evidence than if they were co-occurring in 5 samples. 
Naturally, decreasing the values of :math:`\theta`, :math:`\gamma`, the fragment length or the minimum prevalence can result in more homogeneous but less complete bins.

A few other parameters can be worth tuning. However, their effect has not yet been assessed thoroughly and were empirically chosen. These parameters are:

- The bam flag, `--flag`, minimum mapping quality `--min-mapping-quality` and fragment length range `--fl-range` for coverage filtering, which might affect coverage variability across contigs. Default values are respectively 3852, 50 and '' (no fragment length filtering).
- The number of training examples, `--n-train`: training examples are generated by randomly pairing contigs' fragments. Because there are many potential pairs (depending on the number and length of the contigs), we usually can generates millions of example. In our tests, the training usually starts to plateau after a few hundred thousands examples. Therefore, we set the number of training examples to 1 million.
- All the neural network hyperparameters, such as the number of neurons in each layers, the kernel size and padding for the convolution layer.
- The kmer size, `-k`, (default is 4, recommended range is between 3-6) will impact the composition feature. The longer the kmer and the more specific it will be to a particular genome. However, for short fragments, it might generate very sparse vectors that might prevent the network to learn appropriately. As such, for kmer of size 5 or greater, we recommend increasing the fragment length as well.
- The number of fragments, `--n-frags` (default: 30) to split the contigs in for building the contig-contig adjacency graph. More fragments will make the comparisons more trustworthy. The number of non-redundant fixed-size fragments in a contig is however limited, and the value of this variable will likely plateau or even be detrimental is this value becomes to high.
- The `--load-batch` argument does not affect the accuracy but simply controls how many examples are loaded at once in the memory. It should be used if the memory is very limited.
- The `--max-neighbors` argument correspond to the maximum number of neighbors to consider to compute the adjacency matrix. Increasing it should make the results more accurate but might also significantly increase computing time.
